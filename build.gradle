buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('io.swagger.codegen.v3:swagger-codegen-maven-plugin:3.0.25')
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.message'
version = '1.0.0'
sourceCompatibility = '11'

import io.swagger.codegen.v3.DefaultGenerator
import io.swagger.codegen.v3.config.CodegenConfigurator
import io.swagger.v3.parser.OpenAPIV3Parser

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def apiPackage   = 'com.message.api'
def modelPackage = 'com.message.model'
def ignoreFile = "${rootDir}/.swagger-codegen-ignore"
ext.swaggerFile  = "${rootDir}/src/main/resources/messenger-service.yml"
ext.generatedOutput = "$projectDir/build/"

task generateServer {
    doLast {
        def config = new CodegenConfigurator()
        config.setLang("spring")
        config.setApiPackage(apiPackage)
        config.setModelPackage(modelPackage)
        config.setInputSpec(project.swaggerFile.toString())
        config.setOutputDir(project.buildDir.path.toString())
        config.setIgnoreFileOverride(ignoreFile)
        config.setAdditionalProperties([
                'dateLibrary'     : 'java8',
                'useTags'         : 'true',
                'interfaceOnly'   : 'true'
        ])

        def something = config.toClientOptInput()
        something.setOpenAPI(new OpenAPIV3Parser().read(rootProject.swaggerFile.toString(), null, null))

        (new DefaultGenerator().opts(something)).generate()
    }
}

configurations {
    swagger
}

sourceSets {
    swagger {
        compileClasspath = configurations.swaggerCompile
    }
    main {
        compileClasspath += swagger.output
        runtimeClasspath += swagger.output
    }
}
compileJava.dependsOn generateServer
compileSwaggerJava.dependsOn generateServer
classes.dependsOn swaggerClasses
compileJava.dependsOn compileSwaggerJava

sourceSets.main.java.srcDirs = ["src/main/java", "build/src/main/java"]

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'io.swagger.core.v3:swagger-annotations:2.1.9'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}
